parameters:
- name: 'service_connection_name'
  type: string

steps:
- checkout: self
  fetchDepth: 1

- task: ms-devlabs.custom-terraform-tasks.custom-terraform-installer-task.TerraformInstaller@0
  displayName: Install Terraform
  inputs:
    terraformVersion: $(terraform_version)

- task: AzurePowerShell@4
  displayName: Remove resource Group Lock
  inputs:
    azureSubscription: "${{parameters.service_connection_name}}"
    scriptType: inlineScript
    inline: |
      Get-AzResourceLock -ResourceGroupName "$(resource_group_name)" |
        Where Name -eq 'CanNotDelete' |
        Remove-AzResourceLock -Force
    azurePowerShellVersion: latestVersion

- task: TerraformTaskV2@2
  displayName: Init
  inputs:
    provider: 'azurerm'
    backendServiceArm: "${{parameters.service_connection_name}}"
    backendAzureRmResourceGroupName: "$(state_file_resource_group_name)"
    backendAzureRmStorageAccountName: "$(state_file_storage_account_name)"
    backendAzureRmContainerName: "$(state_file_storage_container_name)"
    backendAzureRmKey: '$(environment_name).terraform.tfstate'
    command: 'init'
    commandOptions: '-input=false'
    workingDirectory: '$(System.DefaultWorkingDirectory)/$(environment_name)/terraform'

- task: AzureCLI@2
  displayName: Load Plan
  inputs:
    azureSubscription: "${{parameters.service_connection_name}}"
    scriptLocation: inlineScript
    scriptType: pscore
    inlineScript: |
      $StoragePath = "$(Build.BuildId)/$(environment_name)"
      $LocalPath = "$(System.DefaultWorkingDirectory)/$(environment_name).tfplan"
      az storage blob download --auth-mode login --account-name $(state_file_storage_account_name) --container-name $(plan_file_storage_container_name) --file $LocalPath --name $StoragePath

- task: TerraformTaskV2@2
  displayName: Apply
  inputs:
    provider: 'azurerm'
    command: 'apply'
    workingDirectory: '$(System.DefaultWorkingDirectory)/$(environment_name)/terraform'
    commandOptions: >
      -input=false
      -auto-approve 
      $(System.DefaultWorkingDirectory)/$(environment_name).tfplan
    environmentServiceNameAzureRM: "${{parameters.service_connection_name}}"

- task: AzurePowerShell@4
  displayName: Add Resource Group Lock
  condition: always()
  inputs:
    azureSubscription: "${{parameters.service_connection_name}}"
    scriptType: inlineScript
    inline: |
      Get-AzResourceLock -ResourceGroupName "$(resource_group_name)" -ErrorAction SilentlyContinue |
        New-AzResourceLock -LockLevel CanNotDelete -LockName "CanNotDelete" -Force
    azurePowerShellVersion: latestVersion